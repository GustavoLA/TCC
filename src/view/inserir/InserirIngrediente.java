/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.inserir;

import controller.IngredienteController;
import controller.SuprimentoController;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.negocio.Ingrediente;
import modelo.negocio.Suprimento;

/**
 *
 * @author GUSTAVO
 */
public class InserirIngrediente extends javax.swing.JFrame {

    private DefaultTableModel listaIngrediente;
    private int linhaSelecionada;

    InserirIngrediente(DefaultTableModel listaIngrediente) {

        initComponents();
        this.listaIngrediente = listaIngrediente;
        carregarCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelFundo = new javax.swing.JPanel();
        txQntidade = new javax.swing.JTextField();
        txUnidadeMedida = new javax.swing.JTextField();
        btSalvar = new javax.swing.JButton();
        qntidade = new javax.swing.JLabel();
        unidadeMedida = new javax.swing.JLabel();
        ingrediente = new javax.swing.JLabel();
        cbIngrediente = new javax.swing.JComboBox();
        txId = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txUnidadeMedida.setEditable(false);

        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        qntidade.setText("Quantidade");

        unidadeMedida.setText("Unidade de medida");

        ingrediente.setText("Ingrediente");

        cbIngrediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbIngredienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelFundoLayout = new javax.swing.GroupLayout(painelFundo);
        painelFundo.setLayout(painelFundoLayout);
        painelFundoLayout.setHorizontalGroup(
            painelFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelFundoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelFundoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btSalvar))
                    .addGroup(painelFundoLayout.createSequentialGroup()
                        .addGroup(painelFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txId, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(painelFundoLayout.createSequentialGroup()
                                .addGroup(painelFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ingrediente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbIngrediente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(60, 60, 60)
                                .addGroup(painelFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txQntidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(qntidade))
                                .addGap(18, 18, 18)
                                .addGroup(painelFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(unidadeMedida)
                                    .addComponent(txUnidadeMedida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 29, Short.MAX_VALUE)))
                .addContainerGap())
        );

        painelFundoLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ingrediente, qntidade, txQntidade, txUnidadeMedida, unidadeMedida});

        painelFundoLayout.setVerticalGroup(
            painelFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelFundoLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(txId, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(painelFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qntidade)
                    .addComponent(unidadeMedida)
                    .addComponent(ingrediente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txQntidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txUnidadeMedida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbIngrediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                .addComponent(btSalvar)
                .addContainerGap())
        );

        painelFundoLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {ingrediente, qntidade, txQntidade, txUnidadeMedida, unidadeMedida});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelFundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelFundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed

        Ingrediente novo = new Ingrediente();
        novo.setNome((Suprimento) cbIngrediente.getSelectedItem());
        novo.setMedida(txUnidadeMedida.getText());
        novo.setQntidade(Integer.parseInt(txQntidade.getText()));

        IngredienteController ic = new IngredienteController();

        ic.salvar(novo);
        dispose();

    }//GEN-LAST:event_btSalvarActionPerformed

    private void cbIngredienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbIngredienteActionPerformed

        Suprimento s = (Suprimento) cbIngrediente.getSelectedItem();
        txUnidadeMedida.setText(s.getUnidadeMedida());

    }//GEN-LAST:event_cbIngredienteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btSalvar;
    private javax.swing.JComboBox cbIngrediente;
    private javax.swing.JLabel ingrediente;
    private javax.swing.JPanel painelFundo;
    private javax.swing.JLabel qntidade;
    private javax.swing.JLabel txId;
    private javax.swing.JTextField txQntidade;
    private javax.swing.JTextField txUnidadeMedida;
    private javax.swing.JLabel unidadeMedida;
    // End of variables declaration//GEN-END:variables

//Carregar comboBox com suprimentos que são para produção
    private void carregarCombo() {

        DefaultComboBoxModel comboModel = (DefaultComboBoxModel) cbIngrediente.getModel();
        comboModel.removeAllElements();
        List<Suprimento> s = new ArrayList<>();

        SuprimentoController sc = new SuprimentoController();
        s = sc.listarSuprimento();

        for (int linha = 0; linha < s.size(); linha++) {
            Suprimento sb = s.get(linha);
            if (sb.getProducao() == 'S') {

                comboModel.addElement(sb);

            }
        }
    }

}
